{
    "sourceFile": "src/uvmgr/main.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1748239742147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748245172939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,5 +13,7 @@\n from __future__ import annotations\n \n from uvmgr.cli import app   # noqa: F401  (re-export)\n \n+\n+\n __all__ = [\"app\"]\n"
                },
                {
                    "date": 1748245181579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,16 @@\n     from .. import main as cli_root\n \n It simply re-exports the root Typer *app* defined in **uvmgr.cli**.\n \"\"\"\n-\n+import os\n from __future__ import annotations\n \n from uvmgr.cli import app   # noqa: F401  (re-export)\n \n+os.environ.setdefault(\"LITELLM_LOCAL_MODEL_COST_MAP\", \"True\")   # already added\n+os.environ.setdefault(\"LITELLM_LOG\", \"WARNING\")                 # new\n \n+# ② hide INFO from the underlying libraries, too\n+logging.getLogger(\"LiteLLM\").setLevel(logging.WARNING)\n \n __all__ = [\"app\"]\n"
                },
                {
                    "date": 1748245187107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,11 @@\n     from .. import main as cli_root\n \n It simply re-exports the root Typer *app* defined in **uvmgr.cli**.\n \"\"\"\n+import logging\n import os\n+impo\n from __future__ import annotations\n \n from uvmgr.cli import app   # noqa: F401  (re-export)\n \n"
                },
                {
                    "date": 1748245206113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,11 @@\n     from .. import main as cli_root\n \n It simply re-exports the root Typer *app* defined in **uvmgr.cli**.\n \"\"\"\n+from __future__ import annotations\n import logging\n import os\n-impo\n-from __future__ import annotations\n \n from uvmgr.cli import app   # noqa: F401  (re-export)\n \n os.environ.setdefault(\"LITELLM_LOCAL_MODEL_COST_MAP\", \"True\")   # already added\n"
                },
                {
                    "date": 1748245335058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,7 @@\n os.environ.setdefault(\"LITELLM_LOG\", \"WARNING\")                 # new\n \n # ② hide INFO from the underlying libraries, too\n logging.getLogger(\"LiteLLM\").setLevel(logging.WARNING)\n+logging.getLogger(\"httpx\").setLevel(logging.WARNING)\n \n __all__ = [\"app\"]\n"
                }
            ],
            "date": 1748239742147,
            "name": "Commit-0",
            "content": "\"\"\"\nuvmgr.main\n==========\n\nCompatibility shim for command-modules that expect ::\n\n    from uvmgr import main as cli_root      # or\n    from .. import main as cli_root\n\nIt simply re-exports the root Typer *app* defined in **uvmgr.cli**.\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom uvmgr.cli import app   # noqa: F401  (re-export)\n\n__all__ = [\"app\"]\n"
        }
    ]
}