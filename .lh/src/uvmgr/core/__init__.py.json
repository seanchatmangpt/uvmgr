{
    "sourceFile": "src/uvmgr/core/__init__.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748231411978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748237229783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+\"\"\"\n+uvmgr.core\n+----------\n+Re-export public helpers for quick scripts:\n+\n+    from uvmgr.core import run, auto_name, venv_path\n+\"\"\"\n+\n+from __future__ import annotations\n+\n+import importlib\n+import sys\n+from types import ModuleType\n+from typing import Final\n+\n+# --------------------------------------------------------------------------- #\n+# List util sub-modules to aggregate\n+# --------------------------------------------------------------------------- #\n+_SUBMODS: Final[tuple[str, ...]] = (\n+    \"paths\",\n+    \"fs\",\n+    \"shell\",\n+    \"venv\",\n+    \"process\",\n+    \"config\",\n+    \"clipboard\",\n+    \"history\",\n+    \"concurrency\",\n+    \"telemetry\",\n+    \"cache\",\n+    \"lint\",\n+)\n+\n+for _name in _SUBMODS:\n+    _mod: ModuleType = importlib.import_module(f\".{_name}\", package=__name__)\n+    # copy *public* symbols only, never dunders, never overwrite built-ins\n+    for _k, _v in _mod.__dict__.items():\n+        if _k.startswith(\"_\"):           # skip dunder / private\n+            continue\n+        if _k in globals():              # don't clobber existing names\n+            continue\n+        globals()[_k] = _v\n+    # also expose sub-module itself\n+    globals()[_name] = _mod\n+\n+# Final public surface — anything we just injected plus the sub-module names\n+__all__ = [k for k in globals().keys() if not k.startswith(\"_\")]\n"
                }
            ],
            "date": 1748231411978,
            "name": "Commit-0",
            "content": "\"\"\"\nuvmgr.core – public re-exports for convenience.\n\"\"\"\n\nfrom importlib import import_module as _imp\n\nfor _m in (\n    \"paths\",\n    \"fs\",\n    \"shell\",\n    \"venv\",\n    \"process\",\n    \"config\",\n    \"clipboard\",\n    \"history\",\n    \"concurrency\",\n    \"telemetry\",\n    \"cache\",\n    \"lint\",\n):\n    globals().update(_imp(f\".{_m}\", __name__).__dict__)\n\n__all__ = [k for k in globals() if not k.startswith(\"_\")]\n"
        }
    ]
}