{
    "sourceFile": "src/uvmgr/core/config.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748231242273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748231242273,
            "name": "Commit-0",
            "content": "\"\"\"\nuvmgr.core.config â€“ env override & typed TOML loader.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport os\nimport tomllib\nfrom pathlib import Path\nfrom typing import Type, TypeVar\n\nfrom pydantic import BaseModel\n\nfrom .paths import CONFIG_DIR\n\nT = TypeVar(\"T\", bound=BaseModel)\n\n__all__ = [\"env_or\", \"load_toml\"]\n\n\ndef env_or(key: str, default: str | None = None) -> str | None:\n    if key in os.environ:\n        return os.environ[key]\n    env_file = CONFIG_DIR / \"env.toml\"\n    if env_file.exists():\n        data = tomllib.loads(env_file.read_text())\n        if key in data:\n            return str(data[key])\n    return default\n\n\ndef load_toml(path: Path, model: Type[T]) -> T:\n    data = tomllib.loads(path.read_text())\n    return model.model_validate(data)\n"
        }
    ]
}