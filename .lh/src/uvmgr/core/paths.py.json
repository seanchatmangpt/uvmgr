{
    "sourceFile": "src/uvmgr/core/paths.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748231158795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748231158795,
            "name": "Commit-0",
            "content": "\"\"\"\nuvmgr.core.paths\n----------------\nAuthoritative filesystem locations & helpers.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport sys\nfrom functools import cache\nfrom pathlib import Path\n\n__all__ = [\n    \"CONFIG_DIR\",\n    \"CACHE_DIR\",\n    \"VENV_DIR\",\n    \"ensure_dirs\",\n    \"project_root\",\n    \"venv_path\",\n    \"bin_dir\",\n    \"bin_path\",\n]\n\nCONFIG_DIR: Path = Path.home() / \".config\" / \"uvmgr\"\nCACHE_DIR: Path = Path.home() / \".uvmgr_cache\"\nVENV_DIR: Path = Path(\".venv\")\n\n\ndef ensure_dirs() -> None:\n    CONFIG_DIR.mkdir(parents=True, exist_ok=True)\n    CACHE_DIR.mkdir(parents=True, exist_ok=True)\n\n\nensure_dirs()  # create on first import\n\n\n@cache\ndef project_root() -> Path:\n    return Path.cwd()\n\n\n@cache\ndef venv_path() -> Path:\n    return (project_root() / VENV_DIR).resolve()\n\n\ndef bin_dir() -> Path:\n    return venv_path() / (\"Scripts\" if sys.platform.startswith(\"win\") else \"bin\")\n\n\ndef bin_path(cmd: str) -> Path:\n    return bin_dir() / cmd\n"
        }
    ]
}