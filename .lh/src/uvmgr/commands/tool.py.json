{
    "sourceFile": "src/uvmgr/commands/tool.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748234824816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748239789458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+from typing import List\n+\n+import typer\n+\n+from uvmgr.core.shell import colour\n+from uvmgr.ops import tools as tool_ops\n+\n+from .. import main as cli_root\n+\n+tool_app = typer.Typer(help=\"uv tool run/install wrapper\")\n+cli_root.app.add_typer(tool_app, name=\"tool\")\n+\n+\n+@tool_app.command(\"run\")\n+def _run(pkg_and_args: list[str] = typer.Argument(..., nargs=-1)):\n+    tool_ops.run(list(pkg_and_args))\n+\n+\n+@tool_app.command(\"install\")\n+def _install(pkgs: list[str] = typer.Argument(..., nargs=-1)):\n+    tool_ops.install(list(pkgs))\n+\n+\n+@tool_app.command(\"dir\")\n+def _dir():\n+    colour(tool_ops.tool_dir(), \"cyan\")\n"
                },
                {
                    "date": 1748240907799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,67 @@\n-from typing import List\n+\"\"\"\n+uvmgr.commands.tool\n+===================\n \n-import typer\n+Light-weight wrapper that lets you\n \n-from uvmgr.core.shell import colour\n-from uvmgr.ops import tools as tool_ops\n+  • run any console-script in the project’s virtual-env\n+  • install additional tools on-the-fly\n+  • locate the bin/ directory that hosts entry-points\n \n-from .. import main as cli_root\n+Examples\n+--------\n+uvmgr tool run black --version\n+uvmgr tool install httpie\n+uvmgr tool dir\n+\"\"\"\n \n-tool_app = typer.Typer(help=\"uv tool run/install wrapper\")\n-cli_root.app.add_typer(tool_app, name=\"tool\")\n+from __future__ import annotations\n \n+from typing import List\n \n-@tool_app.command(\"run\")\n-def _run(pkg_and_args: list[str] = typer.Argument(..., nargs=-1)):\n-    tool_ops.run(list(pkg_and_args))\n+import typer\n \n-\n-@tool_app.command(\"install\")\n-def _install(pkgs: list[str] = typer.Argument(..., nargs=-1)):\n-    tool_ops.install(list(pkgs))\n-\n-\n-@tool_app.command(\"dir\")\n-def _dir():\n-    colour(tool_ops.tool_dir(), \"cyan\")\n-import typer\n-from typing import List\n-from ... import main as cli_root\n+from .. import main as cli_root\n from uvmgr.core.shell import colour\n-from uvmgr.ops import tools as tool_ops\n+from uvmgr.ops import tools as tools_ops\n \n-tool_app = typer.Typer(help=\"uv tool run/install wrapper\")\n-cli_root.app.add_typer(tool_app, name=\"tool\")\n+tool_app = typer.Typer(help=\"Run or manage extra tools inside the venv\")\n+cli_root.app.add_typer(tool_app, name=\"tool\")   # ← mount on the root CLI\n \n \n+# ──────────────────────────────────────────────────────────────────────────────\n+# Commands\n+# ──────────────────────────────────────────────────────────────────────────────\n @tool_app.command(\"run\")\n-def _run(pkg_and_args: List[str] = typer.Argument(..., nargs=-1)):\n-    tool_ops.run(list(pkg_and_args))\n+def run(\n+    pkg_and_args: List[str] = typer.Argument(\n+        ...,\n+        metavar=\"COMMAND [ARGS]...\",\n+        help=\"Tool name followed by its arguments (e.g.  black --check src/)\",\n+    )\n+):\n+    \"\"\"Execute an installed console-script.\"\"\"\n+    if not pkg_and_args:  # happy-path code rarely reaches this\n+        typer.echo(\"No command supplied\", err=True)\n+        raise typer.Exit(1)\n \n+    command, *args = pkg_and_args\n+    tools_ops.run(command, args)\n \n+\n @tool_app.command(\"install\")\n-def _install(pkgs: List[str] = typer.Argument(..., nargs=-1)):\n-    tool_ops.install(list(pkgs))\n+def install(\n+    pkgs: List[str] = typer.Argument(\n+        ...,\n+        metavar=\"PACKAGE...\",\n+        help=\"One or more PyPI package names to install in the venv\",\n+    )\n+):\n+    \"\"\"Install additional tools via *uv pip install*.\"\"\"\n+    tools_ops.install(pkgs)\n \n \n @tool_app.command(\"dir\")\n-def _dir():\n-    colour(tool_ops.tool_dir(), \"cyan\")\n+def dir_() -> None:\n+    \"\"\"Print the venv’s *bin* directory that hosts console-scripts.\"\"\"\n+    colour(tools_ops.tool_dir(), \"cyan\")\n"
                }
            ],
            "date": 1748234824816,
            "name": "Commit-0",
            "content": "import typer\nfrom typing import List\nfrom ... import main as cli_root\nfrom uvmgr.core.shell import colour\nfrom uvmgr.ops import tools as tool_ops\n\ntool_app = typer.Typer(help=\"uv tool run/install wrapper\")\ncli_root.app.add_typer(tool_app, name=\"tool\")\n\n\n@tool_app.command(\"run\")\ndef _run(pkg_and_args: List[str] = typer.Argument(..., nargs=-1)):\n    tool_ops.run(list(pkg_and_args))\n\n\n@tool_app.command(\"install\")\ndef _install(pkgs: List[str] = typer.Argument(..., nargs=-1)):\n    tool_ops.install(list(pkgs))\n\n\n@tool_app.command(\"dir\")\ndef _dir():\n    colour(tool_ops.tool_dir(), \"cyan\")\n"
        }
    ]
}