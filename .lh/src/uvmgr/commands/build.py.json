{
    "sourceFile": "src/uvmgr/commands/build.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748234762912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748239789457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+import pathlib\n+\n+import typer\n+\n+from uvmgr.core.shell import colour, dump_json\n+from uvmgr.ops import build as build_ops\n+\n+from .. import main as cli_root\n+\n+build_app = typer.Typer(help=\"Build wheel + sdist\")\n+cli_root.app.add_typer(build_app, name=\"build\")\n+\n+\n+@build_app.command()\n+def dist(\n+    ctx: typer.Context,\n+    outdir: pathlib.Path = typer.Option(None, \"--outdir\", \"-o\", file_okay=False),\n+    upload: bool = typer.Option(False, \"--upload\", help=\"Twine upload after build\"),\n+):\n+    payload = build_ops.dist(outdir)\n+    if upload:\n+        build_ops.upload(outdir or pathlib.Path(\"dist\"))\n+    if ctx.meta.get(\"json\"):\n+        dump_json(payload)\n+    else:\n+        colour(\"✔ build completed\", \"green\")\n"
                }
            ],
            "date": 1748234762912,
            "name": "Commit-0",
            "content": "import pathlib\nimport typer\nfrom ... import main as cli_root\nfrom uvmgr.core.shell import colour, dump_json\nfrom uvmgr.ops import build as build_ops\n\nbuild_app = typer.Typer(help=\"Build wheel + sdist\")\ncli_root.app.add_typer(build_app, name=\"build\")\n\n\n@build_app.command()\ndef dist(\n    ctx: typer.Context,\n    outdir: pathlib.Path = typer.Option(None, \"--outdir\", \"-o\", file_okay=False),\n    upload: bool = typer.Option(False, \"--upload\", help=\"Twine upload after build\"),\n):\n    payload = build_ops.dist(outdir)\n    if upload:\n        build_ops.upload(outdir or pathlib.Path(\"dist\"))\n    if ctx.meta.get(\"json\"):\n        dump_json(payload)\n    else:\n        colour(\"✔ build completed\", \"green\")\n"
        }
    ]
}