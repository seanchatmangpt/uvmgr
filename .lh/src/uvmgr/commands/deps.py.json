{
    "sourceFile": "src/uvmgr/commands/deps.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748231953404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748239789458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n from uvmgr.core.shell import colour, dump_json\n from uvmgr.ops import deps as deps_ops\n \n-from ... import main as cli_root\n+from .. import main as cli_root\n \n deps_app = typer.Typer(help=\"Dependency management (uv add/remove/upgrade)\")\n \n cli_root.app.add_typer(deps_app, name=\"deps\")\n"
                }
            ],
            "date": 1748231953404,
            "name": "Commit-0",
            "content": "\"\"\"\nTyper sub-app: uvmgr deps …\n\"\"\"\n\nfrom __future__ import annotations\n\nimport typer\nfrom typing import List\n\nfrom ... import main as cli_root\nfrom uvmgr.core.shell import colour, dump_json\nfrom uvmgr.ops import deps as deps_ops\n\ndeps_app = typer.Typer(help=\"Dependency management (uv add/remove/upgrade)\")\n\ncli_root.app.add_typer(deps_app, name=\"deps\")\n\n\n# --------------------------------------------------------------------------- #\n# Shared util\n# --------------------------------------------------------------------------- #\ndef _maybe_json(ctx: typer.Context, payload):\n    if ctx.meta.get(\"json\"):\n        dump_json(payload)\n        raise typer.Exit()\n\n\n# --------------------------------------------------------------------------- #\n# Commands\n# --------------------------------------------------------------------------- #\n@deps_app.command(\"add\")\ndef add(\n    ctx: typer.Context,\n    pkgs: List[str] = typer.Argument(..., help=\"Packages e.g. fastapi requests\"),\n    dev: bool = typer.Option(False, \"--dev\", \"-D\", help=\"Add to dev group\"),\n):\n    res = deps_ops.add(pkgs, dev=dev)\n    _maybe_json(ctx, res)\n    colour(f\"✔ added {' '.join(pkgs)}\", \"green\")\n\n\n@deps_app.command(\"remove\")\ndef remove(\n    ctx: typer.Context,\n    pkgs: List[str] = typer.Argument(...),\n):\n    res = deps_ops.remove(pkgs)\n    _maybe_json(ctx, res)\n    colour(f\"✔ removed {' '.join(pkgs)}\", \"green\")\n\n\n@deps_app.command(\"upgrade\")\ndef upgrade(\n    ctx: typer.Context,\n    all_: bool = typer.Option(False, \"--all\", help=\"Upgrade everything\"),\n    pkgs: List[str] = typer.Argument(None, help=\"Specific packages\"),\n):\n    res = deps_ops.upgrade(all_pkgs=all_, pkgs=pkgs or None)\n    _maybe_json(ctx, res)\n    colour(\"✔ dependencies upgraded\", \"green\")\n\n\n@deps_app.command(\"list\")\ndef _list(ctx: typer.Context):\n    pkgs = deps_ops.list_pkgs()\n    _maybe_json(ctx, pkgs)\n    for p in pkgs:\n        colour(p, \"cyan\")\n"
        }
    ]
}