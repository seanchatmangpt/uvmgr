{
    "sourceFile": "src/uvmgr/commands/project.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748234685823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748239789461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+from pathlib import Path\n+\n+import typer\n+\n+from uvmgr.core.shell import colour, dump_json\n+from uvmgr.ops import project as project_ops\n+\n+from .. import main as cli_root\n+\n+proj_app = typer.Typer(help=\"Project scaffolding (Copier template)\")\n+cli_root.app.add_typer(proj_app, name=\"new\")\n+\n+\n+@proj_app.command()\n+def new(\n+    ctx: typer.Context,\n+    name: str = typer.Argument(..., help=\"Directory / project name\"),\n+    fastapi: bool = typer.Option(False, \"--fastapi\", help=\"Include FastAPI API skeleton\"),\n+    typer_cli: bool = typer.Option(True, \"--typer/--no-typer\", help=\"Include Typer CLI skeleton\"),\n+):\n+    payload = project_ops.new(name, fastapi=fastapi, typer_cli=typer_cli)\n+    if ctx.meta.get(\"json\"):\n+        dump_json(payload)\n+    else:\n+        colour(f\"✔ created project in {payload['path']}\", \"green\")\n"
                }
            ],
            "date": 1748234685823,
            "name": "Commit-0",
            "content": "import typer\nfrom pathlib import Path\nfrom ... import main as cli_root\nfrom uvmgr.core.shell import colour, dump_json\nfrom uvmgr.ops import project as project_ops\n\nproj_app = typer.Typer(help=\"Project scaffolding (Copier template)\")\ncli_root.app.add_typer(proj_app, name=\"new\")\n\n\n@proj_app.command()\ndef new(\n    ctx: typer.Context,\n    name: str = typer.Argument(..., help=\"Directory / project name\"),\n    fastapi: bool = typer.Option(False, \"--fastapi\", help=\"Include FastAPI API skeleton\"),\n    typer_cli: bool = typer.Option(True, \"--typer/--no-typer\", help=\"Include Typer CLI skeleton\"),\n):\n    payload = project_ops.new(name, fastapi=fastapi, typer_cli=typer_cli)\n    if ctx.meta.get(\"json\"):\n        dump_json(payload)\n    else:\n        colour(f\"✔ created project in {payload['path']}\", \"green\")\n"
        }
    ]
}