{
    "sourceFile": "src/uvmgr/ops/__init__.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748236629133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748238409955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     \"ai\",\n     \"remote\",\n     \"agent\",\n     \"cost\",\n+    \"uv\",\n ]\n \n _PREFIX = __name__ + \".\"\n \n"
                }
            ],
            "date": 1748236629133,
            "name": "Commit-0",
            "content": "\"\"\"\nuvmgr.ops\n=========\n\nThe *orchestration* layer â€“ pure Python helpers that never spawn subprocesses\ndirectly and always return JSON-safe data structures.\n\nThis package-level ``__init__``:\n\n1. Documents every ops module in **__all__**.  \n2. Implements a `__getattr__` lazy importer so\n   ``from uvmgr.ops import deps`` works without\n   importing *build*, *ai*, etc. until needed.\n3. Leaves room for future ops modules (add names to __all__).\n\nAdd/remove names in **__all__** when you create or delete files in\n*src/uvmgr/ops/*.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport importlib\nimport sys\nfrom types import ModuleType\nfrom typing import Final, List\n\n__all__: Final[List[str]] = [\n    # core verbs\n    \"deps\",\n    \"tools\",\n    \"cache\",\n    \"indexes\",\n    \"project\",\n    \"build\",\n    \"release\",\n    \"devtasks\",\n    \"shell\",\n    # advanced / optional\n    \"ai\",\n    \"remote\",\n    \"agent\",\n    \"cost\",\n]\n\n_PREFIX = __name__ + \".\"\n\n\ndef __getattr__(name: str) -> ModuleType:\n    if name not in __all__:\n        raise AttributeError(name)\n    module = importlib.import_module(_PREFIX + name)\n    setattr(sys.modules[__name__], name, module)\n    return module\n"
        }
    ]
}