name: agent-command-instrumentation
description: Instrumentation for BPMN workflow agent commands
version: 1.0.0
author: weaver-forge
extends: ../base-command.forge.yaml

inputs:
  command_module: agent
  has_subcommands: true
  uses_subprocess: false

outputs:
  - path: src/uvmgr/commands/agent.py
    merge_strategy: patch
    patches:
      - description: Update imports to new instrumentation pattern
        pattern: "from uvmgr.core.instrumentation import instrument_subcommand"
        replacement: |
          from uvmgr.core.instrumentation import instrument_command, add_span_attributes, add_span_event
          from uvmgr.core.semconv import WorkflowAttributes, WorkflowOperations
      
      - description: Update run_bpmn instrumentation
        pattern: "@instrument_subcommand\\(\"agent\"\\)"
        replacement: "@instrument_command(\"agent_run_bpmn\", track_args=True)"
      
      - description: Add workflow execution attributes
        after: "\"\"\"Run \\*file\\* until the workflow completes.\"\"\""
        content: |
              # Track workflow execution
              add_span_attributes(
                  **{
                      WorkflowAttributes.OPERATION: "run",
                      WorkflowAttributes.TYPE: "bpmn",
                      WorkflowAttributes.DEFINITION_PATH: str(file),
                      WorkflowAttributes.DEFINITION_NAME: file.name,
                      "workflow.file_size": file.stat().st_size,
                  }
              )
              
              # Validate BPMN file
              try:
                  content = file.read_text()
                  is_valid_bpmn = "<?xml" in content and "bpmn" in content.lower()
                  add_span_attributes(**{"workflow.valid_bpmn": is_valid_bpmn})
              except Exception as e:
                  add_span_event("agent.validation_error", {
                      "error": str(e),
                      "file": str(file)
                  })
              
              add_span_event("agent.workflow.started", {
                  "workflow.file": str(file),
                  "workflow.name": file.stem
              })

example_applied: |
  @agent_app.command("run")
  @instrument_command("agent_run_bpmn", track_args=True)
  def run_bpmn(
      file: Path = typer.Argument(
          ...,
          exists=True,
          readable=True,
          dir_okay=False,
          help="Path to a BPMN XML file",
      ),
  ):
      """Run *file* until the workflow completes."""
      # Track workflow execution
      add_span_attributes(
          **{
              WorkflowAttributes.OPERATION: "run",
              WorkflowAttributes.TYPE: "bpmn",
              WorkflowAttributes.DEFINITION_PATH: str(file),
              WorkflowAttributes.DEFINITION_NAME: file.name,
              "workflow.file_size": file.stat().st_size,
          }
      )
      
      # Validate BPMN file
      try:
          content = file.read_text()
          is_valid_bpmn = "<?xml" in content and "bpmn" in content.lower()
          add_span_attributes(**{"workflow.valid_bpmn": is_valid_bpmn})
      except Exception as e:
          add_span_event("agent.validation_error", {
              "error": str(e),
              "file": str(file)
          })
      
      add_span_event("agent.workflow.started", {
          "workflow.file": str(file),
          "workflow.name": file.stem
      })
      
      agent_ops.run(file)