name: PyInstaller Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/uvmgr/commands/build.py'
      - 'src/uvmgr/ops/build.py'
      - 'src/uvmgr/runtime/build.py'
      - 'tests/test_build_exe.py'
      - '.github/workflows/pyinstaller-test.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/uvmgr/commands/build.py'
      - 'src/uvmgr/ops/build.py'
      - 'src/uvmgr/runtime/build.py'
      - 'tests/test_build_exe.py'
      - '.github/workflows/pyinstaller-test.yml'
  workflow_dispatch:

jobs:
  test-pyinstaller:
    name: Test PyInstaller Integration
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .
          uv pip install pyinstaller pyinstaller-hooks-contrib
      
      - name: Run PyInstaller unit tests
        run: |
          uv run pytest tests/test_build_exe.py -v
      
      - name: Test spec generation
        run: |
          uv run uvmgr build spec --name test-${{ matrix.os }}
      
      - name: Test executable building
        run: |
          uv run uvmgr build exe --name test-exe-${{ matrix.os }} --clean
      
      - name: Test dogfood command
        run: |
          uv run uvmgr build dogfood --test --no-platform
      
      - name: Verify built executable
        run: |
          # Find and test the executable
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            ./dist/uvmgr*.exe --version
            ./dist/uvmgr*.exe --help
          else
            ./dist/uvmgr* --version
            ./dist/uvmgr* --help
          fi
        shell: bash
      
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pyinstaller-build-${{ matrix.os }}
          path: |
            dist/
            *.spec
            build/
          
  test-local-runner:
    name: Test with act (local runner)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Document act usage
        run: |
          echo "To run this workflow locally with act:"
          echo ""
          echo "1. Install act:"
          echo "   brew install act  # macOS"
          echo "   or visit: https://github.com/nektos/act"
          echo ""
          echo "2. Run the workflow:"
          echo "   act -j test-pyinstaller"
          echo ""
          echo "3. Run specific OS:"
          echo "   act -j test-pyinstaller -P ubuntu-latest=catthehacker/ubuntu:act-latest"
          echo "   act -j test-pyinstaller -P windows-latest=catthehacker/ubuntu:act-latest"
          echo "   act -j test-pyinstaller -P macos-latest=catthehacker/ubuntu:act-latest"
          echo ""
          echo "Note: Windows and macOS containers may have limitations with act"