name: Dogfooding E2E Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/dogfood-e2e.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/dogfood-e2e.yml'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      verbose:
        description: 'Run tests in verbose mode'
        required: false
        default: 'false'

jobs:
  dogfood-test:
    name: Dogfooding Test Loop
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install uvmgr
        run: |
          uv sync --all-extras
          uv run pip install -e .
          uv run uvmgr --version
      
      - name: Run basic functionality tests
        run: |
          uv run uvmgr --help
          uv run uvmgr deps --help
          uv run uvmgr tests --help
          uv run uvmgr build --help
      
      - name: Run E2E test suite
        run: |
          uv run uvmgr tests run tests/e2e/ -v --tb=short
        timeout-minutes: 30
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dogfood-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            reports/
            .coverage
      
      - name: Test uvmgr self-build
        run: |
          uv run uvmgr build wheel
          uv run uvmgr build check
        timeout-minutes: 15
  
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-scenario:
          - "basic-workflow"
          - "dependency-management"
          - "build-process"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install uvmgr
        run: |
          uv sync --all-extras
          uv run pip install -e .
      
      - name: Run integration test - ${{ matrix.test-scenario }}
        run: |
          case "${{ matrix.test-scenario }}" in
            basic-workflow)
              uv run uvmgr tests run tests/test_cli.py -v
              ;;
            dependency-management)
              uv run uvmgr tests run tests/test_import.py -v
              ;;
            build-process)
              uv run uvmgr tests run tests/test_build_exe.py -v
              ;;
          esac
        timeout-minutes: 20
      
      - name: Check test coverage
        run: |
          uv run uvmgr tests coverage
          uv run coverage report --fail-under=70
        if: matrix.test-scenario == 'basic-workflow'
  
  dogfood-executable:
    name: Test Self-Built Executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install uvmgr and build tools
        run: |
          uv sync --all-extras
          uv run pip install -e .
      
      - name: Build uvmgr executable
        run: |
          uv run uvmgr build dogfood --version --platform
        timeout-minutes: 30
      
      - name: Test executable
        run: |
          ./dist/uvmgr* --version
          ./dist/uvmgr* --help
          ./dist/uvmgr* deps --help
      
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: uvmgr-executable-${{ matrix.os }}
          path: dist/uvmgr*