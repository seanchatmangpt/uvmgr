[build-system] # https://docs.astral.sh/uv/concepts/projects/config/#build-systems
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project] # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "uvmgr"
version = "0.0.0"
description = "A DX wrapper around the uv package and project manager."
readme = "README.md"
authors = [{ name = "Sean Chatman", email = "info@chatmangpt.com" }]
requires-python = ">=3.12,<4.0"
dependencies = [
  "apscheduler>=3.11.0",
  "dspy>=2.6.24",
  "ember-ai>=0.0.1",
  "fastapi>=0.115.12",
  "keyring>=25.6.0",
  "numpy>=2.2.6",
  "opentelemetry-sdk>=1.33.1",
  "poethepoet (>=0.32.1)",
  "pyarrow>=20.0.0",
  "pyperclip>=1.9.0",
  "pytest>=8.3.5",
  "pytz>=2025.2",
  "rich>=14.0.0",
  "ruff>=0.11.11",
  "spiffworkflow>=3.1.1",
  "typer>=0.15.1",
  "zstandard>=0.23.0",
]

[project.scripts] # https://docs.astral.sh/uv/concepts/projects/config/#command-line-interfaces
uvmgr = "uvmgr.cli:app"

[project.urls] # https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://github.com/seanchatmangpt/uvmgr"
source = "https://github.com/seanchatmangpt/uvmgr"
changelog = "https://github.com/seanchatmangpt/uvmgr/blob/main/CHANGELOG.md"
releasenotes = "https://github.com/seanchatmangpt/uvmgr/releases"
documentation = "https://github.com/seanchatmangpt/uvmgr"
issues = "https://github.com/seanchatmangpt/uvmgr/issues"

[dependency-groups] # https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies
dev = [
  "commitizen (>=4.3.0)",
  "coverage[toml] (>=7.6.10)",
  "ipykernel (>=6.29.4)",
  "ipython (>=8.18.0)",
  "ipywidgets (>=8.1.2)",
  "mypy (>=1.14.1)",
  "pdoc (>=15.0.1)",
  "pre-commit (>=4.0.1)",
  "pytest (>=8.3.4)",
  "pytest-mock (>=3.14.0)",
  "pytest-xdist (>=3.6.1)",
  "ruff (>=0.9.2)",
]

[tool.commitizen] # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump: v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "uv"

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff] # https://docs.astral.sh/ruff/settings/
fix = true
line-length = 100
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",
  "ASYNC",
  "B",
  "C4",
  "C90",
  "D",
  "DTZ",
  "E",
  "F",
  "FLY",
  "FURB",
  "I",
  "ISC",
  "LOG",
  "N",
  "NPY",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RUF",
  "RSE",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = ["D203", "D213", "E501", "PGH002", "PGH003", "RET504", "S101", "S307"]
unfixable = ["F401", "F841"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.executor] # https://github.com/nat-n/poethepoet
type = "simple"

[tool.poe.tasks]

[tool.poe.tasks.serve]
help = "Serve the app"

[[tool.poe.tasks.serve.sequence]]
cmd = "echo 'Serving app (placeholder)...'"

[tool.poe.tasks.docs]
help = "Generate this app's docs"
cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      uvmgr
    """

[[tool.poe.tasks.docs.args]]
help = "The docstring style (default: numpy)"
name = "docformat"
options = ["--docformat"]
default = "numpy"

[[tool.poe.tasks.docs.args]]
help = "The output directory (default: docs)"
name = "outputdirectory"
options = ["--output-directory"]
default = "docs"

[tool.poe.tasks.lint]
help = "Lint this app"
cmd = """
    pre-commit run
      --all-files
      --color always
    """

[tool.poe.tasks.test]
help = "Test this app"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage run"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage report"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage xml"
