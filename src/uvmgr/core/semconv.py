# #
# Auto-generated semantic convention constants for uvmgr.
# Generated from /Users/sac/dev/uvmgr/weaver-forge/registry
#
# DO NOT EDIT - this file is auto-generated by Weaver Forge.

"""
Semantic Convention Constants for uvmgr
==================================================

This module contains auto-generated semantic convention constants that provide
type-safe access to OpenTelemetry semantic convention attributes.

Generated on: 2025-06-27T18:55:48.048009
Weaver version: weaver 0.15.3
Registry: /Users/sac/dev/uvmgr/weaver-forge/registry
"""

from typing import Final


# CLI command attributes for uvmgr
class CliAttributes:
    """CLI command attributes for uvmgr"""
    
    CLI_COMMAND: Final[str] = "cli.command"  # The primary CLI command being executed
    
    CLI_SUBCOMMAND: Final[str] = "cli.subcommand"  # The subcommand if applicable
    
    CLI_EXIT_CODE: Final[str] = "cli.exit_code"  # The exit code of the CLI command
    


# Package management operation attributes
class PackageAttributes:
    """Package management operation attributes"""
    
    NAME: Final[str] = "package.name"  # Name of the package being operated on
    
    VERSION: Final[str] = "package.version"  # Version specification or resolved version
    
    OPERATION: Final[str] = "package.operation"  # The type of package operation
    
    DEV_DEPENDENCY: Final[str] = "package.dev_dependency"  # Whether this is a dev dependency


# Package operations
class PackageOperations:
    """Standard package operation values"""
    
    ADD: Final[str] = "add"
    
    REMOVE: Final[str] = "remove"
    
    UPDATE: Final[str] = "update"
    
    LIST: Final[str] = "list"
    
    SYNC: Final[str] = "sync"


# Tool management attributes
class ToolAttributes:
    """Tool management attributes for venv and uvx tools"""
    
    TOOL_NAME: Final[str] = "tool.name"  # Name of the tool being operated on
    
    TOOL_VERSION: Final[str] = "tool.version"  # Version of the tool
    
    TOOL_OPERATION: Final[str] = "tool.operation"  # Type of tool operation
    
    ISOLATED: Final[str] = "tool.isolated"  # Whether tool runs in isolated environment
    
    PACKAGE_COUNT: Final[str] = "tool.package_count"  # Number of packages in operation
    
    CATEGORY: Final[str] = "tool.category"  # Tool category (linting, testing, etc.)
    
    RECOMMENDATION_COUNT: Final[str] = "tool.recommendation_count"  # Number of recommendations
    
    HEALTH_STATUS: Final[str] = "tool.health_status"  # Health check status
    
    PROFILE: Final[str] = "tool.profile"  # Tool profile name


# Tool operations
class ToolOperations:
    """Standard tool operation values"""
    
    RUN: Final[str] = "run"
    
    INSTALL: Final[str] = "install"
    
    UNINSTALL: Final[str] = "uninstall"
    
    LIST: Final[str] = "list"
    
    DIRECTORY: Final[str] = "directory"
    
    RECOMMEND: Final[str] = "recommend"
    
    HEALTH_CHECK: Final[str] = "health_check"
    
    SYNC: Final[str] = "sync"


# uvx-specific attributes
class UvxAttributes:
    """uvx-specific attributes for isolated tool management"""
    
    OPERATION: Final[str] = "uvx.operation"  # uvx operation type
    
    PACKAGE: Final[str] = "uvx.package"  # Package being managed by uvx
    
    TOOL: Final[str] = "uvx.tool"  # Tool being run by uvx
    
    PYTHON_VERSION: Final[str] = "uvx.python_version"  # Python version for uvx
    
    FORCE: Final[str] = "uvx.force"  # Force flag for uvx operations
    
    CATEGORY: Final[str] = "uvx.category"  # Category for recommendations
    
    TOOL_COUNT: Final[str] = "uvx.tool_count"  # Number of uvx tools
    
    RECOMMENDATION_COUNT: Final[str] = "uvx.recommendation_count"  # Number of recommendations
    
    HEALTH_STATUS: Final[str] = "uvx.health_status"  # Health status of uvx environment


# Process execution attributes
class ProcessAttributes:
    """Process execution attributes"""
    
    COMMAND: Final[str] = "process.command"  # Command being executed
    
    EXECUTABLE: Final[str] = "process.executable"  # Executable name
    
    EXIT_CODE: Final[str] = "process.exit_code"  # Process exit code
    
    WORKING_DIRECTORY: Final[str] = "process.working_directory"  # Working directory


# Test execution attributes  
class TestAttributes:
    """Test execution attributes"""
    
    OPERATION: Final[str] = "test.operation"  # Test operation type
    
    FRAMEWORK: Final[str] = "test.framework"  # Testing framework
    
    TEST_COUNT: Final[str] = "test.count"  # Number of tests
    
    PASSED: Final[str] = "test.passed"  # Number of tests passed
    
    FAILED: Final[str] = "test.failed"  # Number of tests failed
    
    SKIPPED: Final[str] = "test.skipped"  # Number of tests skipped
    
    COVERAGE_PERCENTAGE: Final[str] = "test.coverage_percentage"  # Test coverage percentage


# Build operation attributes
class BuildAttributes:
    """Build operation attributes"""
    
    TYPE: Final[str] = "build.type"  # Build type (wheel, exe, etc.)
    
    OUTPUT_PATH: Final[str] = "build.output_path"  # Output path
    
    SIZE: Final[str] = "build.size"  # Build artifact size


# Project creation attributes
class ProjectAttributes:
    """Project creation attributes"""
    
    NAME: Final[str] = "project.name"  # Project name
    
    LANGUAGE: Final[str] = "project.language"  # Programming language
    
    OPERATION: Final[str] = "project.operation"  # Project operation type


# Project operations
class ProjectOperations:
    """Standard project operation values"""
    
    CREATE: Final[str] = "create"


# AI operation attributes
class AIAttributes:
    """AI operation attributes"""
    
    OPERATION: Final[str] = "ai.operation"  # AI operation type
    
    MODEL: Final[str] = "ai.model"  # AI model name
    
    PROVIDER: Final[str] = "ai.provider"  # AI provider
    
    TOKENS_INPUT: Final[str] = "ai.tokens.input"  # Input tokens
    
    TOKENS_OUTPUT: Final[str] = "ai.tokens.output"  # Output tokens
    
    COST: Final[str] = "ai.cost"  # Operation cost


# CI operation attributes
class CIAttributes:
    """CI operation attributes"""
    
    OPERATION: Final[str] = "ci.operation"  # CI operation type
    
    RUNNER: Final[str] = "ci.runner"  # CI runner type
    
    ENVIRONMENT: Final[str] = "ci.environment"  # Environment type
    
    TEST_COUNT: Final[str] = "ci.test_count"  # Number of tests
    
    PASSED: Final[str] = "ci.passed"  # Number passed
    
    FAILED: Final[str] = "ci.failed"  # Number failed
    
    DURATION: Final[str] = "ci.duration"  # Duration in seconds
    
    SUCCESS_RATE: Final[str] = "ci.success_rate"  # Success rate percentage


# CI operations
class CIOperations:
    """Standard CI operation values"""
    
    VERIFY: Final[str] = "verify"
    
    QUICK_TEST: Final[str] = "quick_test"
    
    RUN: Final[str] = "run"
    





# Validation helpers
def validate_attribute(attribute_name: str, attribute_value: str) -> bool:
    """Validate that an attribute name and value are valid semantic conventions."""
    valid_attributes = {
        CliAttributes.CLI_COMMAND,
        CliAttributes.CLI_SUBCOMMAND,
        CliAttributes.CLI_EXIT_CODE,
        PackageAttributes.PACKAGE_NAME,
        PackageAttributes.PACKAGE_VERSION,
        PackageAttributes.PACKAGE_OPERATION,
        ToolAttributes.TOOL_NAME,
        ToolAttributes.TOOL_VERSION,
        ToolAttributes.TOOL_OPERATION,
        ToolAttributes.ISOLATED,
        ToolAttributes.PACKAGE_COUNT,
        ToolAttributes.CATEGORY,
        ToolAttributes.RECOMMENDATION_COUNT,
        ToolAttributes.HEALTH_STATUS,
        ToolAttributes.PROFILE,
        UvxAttributes.OPERATION,
        UvxAttributes.PACKAGE,
        UvxAttributes.TOOL,
        UvxAttributes.PYTHON_VERSION,
        UvxAttributes.FORCE,
        UvxAttributes.CATEGORY,
        UvxAttributes.TOOL_COUNT,
        UvxAttributes.RECOMMENDATION_COUNT,
        UvxAttributes.HEALTH_STATUS,
    }
    return attribute_name in valid_attributes

# Export all classes for convenient importing
__all__ = [
    "CliAttributes",
    "PackageAttributes", 
    "ToolAttributes",
    "ToolOperations",
    "UvxAttributes",
    "ProcessAttributes",
    "TestAttributes", 
    "BuildAttributes",
    "ProjectAttributes",
    "ProjectOperations",
    "AIAttributes",
    "CIAttributes",
    "CIOperations",
    "validate_attribute",
]